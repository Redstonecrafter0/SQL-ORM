{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Info",
  "comment": "Function 'escape' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/sqlorm/statement/StatementBuilder.kt",
      "language": "kotlin",
      "line": 79,
      "offset": 12,
      "length": 6,
      "code": {
        "startLine": 77,
        "length": 6,
        "offset": 36,
        "surroundingCode": "\n    companion object {\n        fun escape(s: String) = \"`${s.replace(\" `\", \"` `\")}`\"\n        operator fun String.unaryPlus() = escape(this)\n    }"
      }
    }
  ],
  "attributes": {
    "module": "sql-orm",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "-7239264297086035058"
}]}